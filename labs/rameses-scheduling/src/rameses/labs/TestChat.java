/*
 * TestChat.java
 *
 * Created on July 27, 2011, 1:19 PM
 */

package rameses.labs;

import com.rameses.invoker.client.SimpleHttpClient;
import com.rameses.invoker.client.SimpleHttpPoller;
import com.rameses.invoker.client.SimpleHttpPoller.MessageHandler;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;

/**
 *
 * @author  jzamss
 */
public class TestChat extends javax.swing.JDialog {
    private SimpleHttpPoller client = new SimpleHttpPoller("http://localhost:8080/upcebu/messaging", "listen" );
    /** Creates new form TestChat */
    public TestChat(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        client.addHandler( new MyTest() );
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        cmdStart = new javax.swing.JButton();
        cmdStop = new javax.swing.JButton();
        txtMsg = new javax.swing.JTextField();
        txtValue = new javax.swing.JTextArea();
        cmdSend = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        cmdStart.setText("Start");
        cmdStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdStartActionPerformed(evt);
            }
        });

        cmdStop.setText("Stop");
        cmdStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdStopActionPerformed(evt);
            }
        });

        txtValue.setColumns(20);
        txtValue.setRows(5);

        cmdSend.setText("Send");
        cmdSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSendActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(layout.createSequentialGroup()
                        .add(cmdStart)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(cmdStop))
                    .add(txtMsg, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE)
                    .add(cmdSend)
                    .add(txtValue))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cmdStart)
                    .add(cmdStop))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(txtMsg, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cmdSend)
                .add(37, 37, 37)
                .add(txtValue, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(80, Short.MAX_VALUE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void cmdSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSendActionPerformed
        SimpleHttpClient sc = new SimpleHttpClient("http://localhost:8080/upcebu/messaging" );
        try {
            Map map = new HashMap();
            map.put( "message", txtMsg.getText() );
            sc.post( "send", map );
            txtMsg.setText("");
        } catch(Exception ign) {
            throw new RuntimeException(ign);
        }
    }//GEN-LAST:event_cmdSendActionPerformed
    
    private class MyTest implements MessageHandler {
        public void onMessage(String msg) {
            System.out.println("message is " + msg);
        }
    }
    
    private void cmdStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdStopActionPerformed
// TODO add your handling code here:
        //try {fileOutput.close();}catch(Exception ex){;}
        client.stop();
        JOptionPane.showMessageDialog(null,"stopped the service");
    }//GEN-LAST:event_cmdStopActionPerformed
    
    private void cmdStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdStartActionPerformed
        try {
            //fileOutput = new FileOutputStream(file, true);
            client.start();
        } catch(Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_cmdStartActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TestChat(new javax.swing.JFrame(), true).setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdSend;
    private javax.swing.JButton cmdStart;
    private javax.swing.JButton cmdStop;
    private javax.swing.JTextField txtMsg;
    private javax.swing.JTextArea txtValue;
    // End of variables declaration//GEN-END:variables
    
}
