import com.rameses.annotations.*;

class PartnerRoleAdminService {

	@PersistenceContext("main")
	def em;

	@ProxyMethod
	public def create(o) {
		o.objid="ROLE"+new java.rmi.server.UID();
		return em.create("role", o);
	} 

	@ProxyMethod
	public def read(o) {
		return em.read("role", o);
	}

	@ProxyMethod
	public def update(o) {
		return em.update("role", o);
	}

	@ProxyMethod
	public def remove(o) {
		return em.delete("role", o);
	}

	@ProxyMethod 
	public def getList(param) {	
		def qry = em.sqlContext.createQuery("SELECT * FROM role");
		//qry.setFirstResult(param._start);
		//qry.setMaxResults(param._limit);
		return qry.resultList;
	}

	@ProxyMethod 
	public def getRoleList(def param) {
		def qry = em.sqlContext.createQuery("SELECT role,master,grouptype FROM role");
		//qry.setFirstResult(param._start);
		//qry.setMaxResults(param._limit);
		return qry.resultList;
	}
	
	@ProxyMethod
	public def getMasterRoles(){
		return em.sqlContext.createQuery("SELECT name FROM role WHERE name=masterrole").resultList;
	}

	@ProxyMethod
	public def getRoleName() {
		return em.sqlContext.createQuery( "SELECT DISTINCT name FROM role" ).resultList;
	}

	@ProxyMethod
	public def getRolePermissions(o) {
		def r = em.read("role", [role:o.role]);
		return em.read("permissionset", [name: r.permissionset] ).permissions;
	}
	
}
